#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/mouse.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100
#define SCROLL 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    //  behaviors に追加
    // 新しいスクロール動作の追加
    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W         &kp E        &kp R      &kp T                                              &kp Y         &kp U  &kp I            &kp O              &kp P
&mt LALT A    &mt LSHIFT S  &kp D        &kp F      &kp G                            &kp SINGLE_QUOTE  &kp H         &kp J  &kp K            &mt RIGHT_SHIFT L  &kp MINUS
&kp Z         &kp X         &mt LCTRL C  &kp V      &kp B        &kp INT5            &kp INT4          &kp N         &kp M  &mt RCTRL COMMA  &kp PERIOD         &kp SLASH
&lt 5 ESCAPE  &kp LEFT_WIN  &kp AT       &lt 2 TAB  &lt 1 SPACE  &kp LEFT_SHIFT      &kp BACKSPACE     &lt 1 RETURN                                             &lt 6 RC(SPACE)
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        ARROW {
            bindings = <
&kp EXCLAMATION       &kp DOUBLE_QUOTES      &kp GRAVE            &kp F2             &kp F5                              &kp LC(PAGE_UP)  &mkp MB4        &mkp MB3        &mkp MB5         &kp LC(PG_DN)
&kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET     &kp RIGHT_BRACKET  &kp TILDE                  &trans   &kp PG_UP        &mkp LCLK       &kp UP_ARROW    &mkp RCLK        &kp HOME
&kp INT3              &kp PIPE               &mt LCTRL SEMICOLON  &kp COLON          &kp UNDERSCORE  &none      &trans   &kp PG_DN        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END
&kp ESCAPE            &kp LSHIFT             &kp LCTRL            &to 0              &trans          &to 2      &kp DEL  &kp ENTER                                                         &mo 6
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        NUM {
            bindings = <
&kp ESCAPE  &kp HASH        &kp DOLLAR         &kp PERCENT    &kp AMPERSAND                             &kp SLASH     &kp N7        &kp N8        &kp N9        &kp MINUS
&kp F7      &kp F8          &kp F9             &kp F10        &kp AT                     &none          &kp ASTERISK  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS
&kp LA(F4)  &none           &kp LC(SEMICOLON)  &kp LC(COLON)  &kp UNDER      &kp F4      &none          &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL
&kp LC(F4)  &kp LEFT_SHIFT  &kp LS(LCTRL)      &to 0          &trans         &tog 3      &kp BACKSPACE  &kp N0                                                  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        NONE {
            bindings = <
&kp ESCAPE  &kp LC(LS(TAB))  &kp UP_ARROW            &kp LC(TAB)      &trans                                       &trans  &trans  &trans  &trans  &trans
&kp HOME    &kp LEFT_ARROW   &kp DOWN_ARROW          &kp RIGHT_ARROW  &kp END                              &trans  &trans  &trans  &trans  &trans  &trans
&trans      &kp LEFT_SHIFT   &kp LG(LS(LEFT_ARROW))  &trans           &kp LG(LS(RIGHT_ARROW))  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans           &trans                  &trans           &trans                   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        NONE2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &none   &none   &none
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        BT {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans              &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                  &bt BT_CLR_ALL
            >;
        };

        SCROLL {
            bindings = <
&none   &none   &none   &none   &none                       &none   &none   &none   &none   &none 
&none   &none   &none   &none   &none               &none   &none   &none   &none   &none   &none 
&none   &none   &none   &none   &none   &none       &none   &none   &none   &none   &none   &none 
&none   &none   &none   &none   &none   &none       &none   &none                           &none 
            >;
        };
    };
};
